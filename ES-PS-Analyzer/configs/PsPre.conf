input {
	beats {
		port => "5044"
	}
}

filter {
	if [winlog][event_id] == 800 {
		#dissect {
		#	mapping => {
		#		"[winlog][event_data][ContextInfo]" => "\tSeverity = %{[powershell][severity]}\n\t"
		#	}
		#}
		#ruby {
		#	path => "C:\logstash\scripts\powershell.rb" 
		#}
		
		grok {
			match => { 
				"[winlog][event_data][param2]" => "DetailSequence=%{INT:[temp][nr]:int}%{GREEDYDATA}DetailTotal=%{INT:[temp][of]:int}%{GREEDYDATA}SequenceNumber=%{INT:[temp][psid]:int}"
			}
		}
        
		if [temp][of] > 1{
			if [temp][nr] == 1{
				aggregate {
					task_id => "%{[host][id]} %{[temp][psid]}"	
					map_action => "create"
					code => "map['param3'] = event.get('[winlog][event_data][param3]')"
				}
			} else if [temp][nr] < [temp][of] {
				aggregate {
					task_id => "%{[host][id]} %{[temp][psid]}"
					map_action => "update"
					code => "map['param3'] += event.get('[winlog][event_data][param3]')"
				}
			} else if [temp][nr] == [temp][of] {
				aggregate {
					task_id => "%{[host][id]} %{[temp][psid]}"
					map_action => "update"
					code => "map['param3'] += event.get('[winlog][event_data][param3]'); event.set('[winlog][event_data][param3]', map['param3'])"
					end_of_task => true
					timeout => 120
				}
			}
		}
        
        if [temp][nr] == [temp][of] {
            grok {
                match => { 
                    "[winlog][event_data][param2]" => "\tHostApplication=%{DATA:[powershell][host_application]}\n\tEngineVersion=%{DATA:[powershell][version]}\n\t%{DATA}\tScriptName=%{DATA:[powershell][script_name]}\n\tCommandLine=%{GREEDYDATA:[powershell][main_command]}"
                }
            }
            ruby {
                path => "C:\logstash\scripts\powershell.rb" 
            }
            mutate {
                remove_field => [ "[winlog][event_data]", "temp", "message" ]
            }
        } else {
            drop {}
        }
		
	} else if [winlog][event_id] == 4688 {
		mutate {
			add_field => {
				"[powershell][script_name]" => ""
				"[powershell][host_application]" => "%{[winlog][event_data][ParentProcessName]}"
				"[powershell][main_command]" => "%{[winlog][event_data][CommandLine]}"
			}
		}
		grok {
			match => {
				"[winlog][event_data][CommandLine]" => '(?<[powershell][command]>[A-Za-z]*?(?=\.| |$)).*?(\s|$)%{GREEDYDATA:[powershell][parameters]}' 
			}
		}
		if ("" in [powershell][parameters]) {
			ruby {
				code => 'event.set("[powershell][parameters]", event.get("[powershell][parameters]").split(/\s(?=(?:[^"]|"[^"]*")*$)/))'
			}
		} else {
			mutate {
				update => { "[powershell][parameters]" => [] }
			} 
		}
	}
}

output { 
		tcp {
			codec => json_lines
			port => "9432"
			host => "localhost" 
		}
		#stdout{}
}